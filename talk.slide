Managing EC2 servers with Ansible
20 May, 2014

Lorin Hochstein
Lead Software Engineer, SendGrid
lorin.hochstein@sendgrid.com
@lhochstein

* 

#
# Managing EC2 servers by hand is a pain
#


# - Random example: you need to do a security update because there’s a
#   bug in an SSL library
# - You don’t want to ssh to individual machines for maintenance
#     - If you have more than one server, you’ll likely make them
#       inconsistent
#     - It doesn’t scale
#     - It’s not a good use of your time
#     * Lots of automation tools out there to eliminate this pain

# - Our roadmap
#     - Today I’m talking about one such tool, Ansible
#     - Also makes life simpler if you use the same tool for deployment
#       as for server management
#           Maybe zap this from here
#     - Focus today is on using Ansible with EC2

.image ssh.png

* Title here

#
# Ansible basic explanation
#

# Say you had to do a security update on Ubuntu

    $ ssh myserver
    $ sudo apt-get update
    $ sudo apt-get dist-upgrade


* 
# Here's how you would do it in ansible
# You'd write a playbook

.code security-update.yml

* 

# The magic comes from the apt module
.image apt.png

* 

# - Then you’d run it
# - What just happened?
# - First, Ansible had to figure out which hosts it was going to interact
#   with
# - Then it ssh’d to each one, copied over some Python scripts, and ran
#   them
# - Each task ran in parallel across the machines
# - But each task has to finish before it moves onto the next one
# - We can get fancier and check for reboot
# - We can also run them serially so we don’t reboot all our servers at
#   once


    $ ansible-playbook security-update.yml
    <TODO: show output here>


* 
# - Here’s a more complex example: Installing New Relic server monitoring
#   agent
#
# - We have multiple tasks, and we even have a variable.
# - We can do more templating, conditions, but that's not what I'd like to talk
# about today

.code new-relic.yml

* 

# Here's something you run into pretty quickly
# Ansible needs to know where your hosts are

    $ ansible-playbook new-relic.yml

    PLAY [Configure server to monitor with New Relic] *****************************
    skipping: no hosts matched

    PLAY RECAP ********************************************************************

* 

# The simplest inventory file

Inventory file:

.code inventory-simple

Playbook:

    - name: My playbook
      hosts: mail.example.com
      tasks:
        ...

* 

# We can also define groups

Inventory file:

.code inventory-with-groups

Playbook:

    - name: My playbook
      hosts: webservers
      tasks:
        ...

* 

# We can even define groups of groups

Inventory file:

.code inventory-groups-of-groups

Playbook:

    - name: My playbook
      hosts: appservers
      tasks:
        ...
